name: wokwi
# either manually started, or on a schedule
on: [ push, workflow_dispatch ]
jobs:
  wokwi:
    env:
        OPENLANE_TAG:   2022.02.23_02.50.41
        OPENLANE_IMAGE_NAME:    efabless/openlane:$(OPENLANE_TAG)
        OPENLANE_ROOT:  /home/runner/openlane
        PDK_ROOT:       /home/runner/pdk
        PDK:            sky130A

    # ubuntu
    runs-on: ubuntu-latest
    steps:
    # need the repo checked out
    - name: checkout repo
      uses: actions/checkout@v2

    # caching version seems broken atm
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7.7' # install the python version needed

    # python deps from reqirements file, use a marketplace action
    - name: Install Python dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: "requirements.txt"

    - uses: actions/checkout@v2
      with:
          repository: s-holst/GDS2WebGL
          path: GDS2WebGL

    # PDK cache
    - id: pdk_cache
      uses: actions/cache@v3
      with:
        path: |
          ~/pdk
          ~/openlane
          ~/caravel_user_project
          ~/images
        key: pdk-cache-mpw-6c
        restore-keys: |
          pdk-cache-mpw-6c

    # build PDK and fetch OpenLane
    - if: steps.pdk_cache.outputs.cache-hit != 'true'
      name: pdk & caravel
      run: |
        cd $HOME
        git clone https://github.com/efabless/caravel_user_project.git -b mpw-6c
        cd caravel_user_project
        make setup
        cd $HOME
        mkdir images
        docker save -o ~/images/openlane.tar efabless/openlane

    - if: steps.pdk_cache.outputs.cache-hit == 'true'
      name: restore openlane docker
      run: |
        docker load -i ~/images/openlane.tar

    # fetch the Verilog from Wokwi API
    - name: fetch Verilog
      run: make fetch

    # run the 'harden' rule in the Makefile to use OpenLane to build the GDS
    - name: make GDS
      run: make harden

    # for debugging, show all the files
    - name: show files
      run: find runs/wokwi/results

    # make html gds viewer with GDS2WebGL
    - name: GDS2WebGL
      run: |
        cd GDS2WebGL
        python3 gds2webgl.py -i ../runs/wokwi/results/final/gds/*gds -o ../gds.html

    # archive the gds and some other important files
    - name: Archive files
      uses: actions/upload-artifact@v2
      with:
          # path depends on the tag and the module name
          name: GDS
          path: |
            src/*
            runs/wokwi/results/final/*
            runs/wokwi/reports/final_summary_report.csv
            runs/wokwi/reports/synthesis/1-synthesis.stat.rpt.strategy4
            gds.html

